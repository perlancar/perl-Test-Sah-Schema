#!perl

use 5.010001;
use strict;
use warnings;

use Getopt::Long qw(:config bundling no_ignore_case auto_help auto_version);
use Test::Sah::Schema;

# AUTHORITY
# DATE
# DIST
# VERSION

my %opts = (
    exclude_modules => [],
    include_modules => [],
    test_schema_examples => 1,
);
GetOptions(
    'include-module=s' => $opts{include_modules},
    '<>' => sub {
        push @{ $opts{include_modules} }, $_[0];
    },
    'exclude-module=s' => $opts{exclude_modules},
    'E' => sub { $opts{test_schema_examples} = 0 },
);

sah_schema_modules_ok(
    \%opts,
);

1;
# ABSTRACT: Test all Schema modules in distribution
# PODNAME:

=head1 SYNOPSIS

In your dist directory:

 % test-sah-schema-modules [options] [included_module]...

Examples:

 # test all Sah::Schema modules in dist
 % test-sah-schema-modules

 # only test a single Sah::Schema module
 % test-sah-schema-modules --include-module date::tz_offset

 # only test a couple of Sah::Schema modules
 % test-sah-schema-modules date::tz_offset date::tz_name


=head1 DESCRIPTION

This script is a command-line interface for L<Test::Sah::Schema>'s
C<sah_schema_modules_ok()> function.


=head1 OPTIONS

=over

=item * --include-modules=s

Include a module. Can be specified multiple times. If specified then only
included modules will be tested.

=item * --exclude-modules=s

Exclude a module. Can be specified multiple times.

=item * -E

This sets C<test_schema_examples> to 0.

=back


=head1 SEE ALSO

L<Test::Sah::Schema>

=cut
